What happens when you initialize a repository? Why do you need to do it?
When you initialize a repository it creates a configuration file that will have all the 
metadata of the history of the files in the repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area has a preselection of what is going to be commited.
Provides users of a previous step in order to find mistake before commiting.

How can you use the staging area to make sure you have one commit per logical
change?
It provides an intermediate stage to check if the files that are going to be commited correspond
to one logical change 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches are useful to have different stages of code. And to make experimiental changes. This will make other versions of your code leaving the original untouched.

How do the diagrams help you visualize the branch structure?
The diagram makes easy to understand the dependencies between commits and how branches are
involved in it.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
Unify the modifications of two different branches in their last commit. It creates a new commit with the unification of the other two.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Automatic merging helps users to add the different parts of code that don't generate conflict. So it adds up all the new things 
that don't bother each other