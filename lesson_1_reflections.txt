How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff command was useful to only show the differences between the files. It resumed
    a giant file to only a few words in which there were differences. That's why with that
    we can easily see were the bug was introduced.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Whenever a bug is introduced or something went wrong and you want to go back, it's easy
    to restore to a previous version when using history. All a safe or past version is stored.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It's flexible because you can manage when there is a new safe version of the files.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because the use case is mainly to code programming. Here you can change several files 
    in one logical change.

How can you use the commands git log and git diff to view the history of files?

    You can use git log in order to see the changes introduced in each commit. In addition,
    with git diff you can see what were those changes really.

How might using version control make you more confident to make changes that
could break something?

    It makes you more confident because you always have a backup that was in a safe state. 
    So you can revert the commit an everything will be okay.

Now that you have your workspace set up, what do you want to try using Git for?

    Start developing my own programming projects